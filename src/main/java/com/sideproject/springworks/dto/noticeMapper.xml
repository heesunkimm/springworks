<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="com.sideproject.springworks.dto.NoticeMapper">

	<!-- 공지사항 리스트 -->
	<select id="noticeList" parameterType="java.util.Map" resultType="NoticeDTO">
		select * from (        				
						select rownum rn, B.*
						from(
						    select A.*, spw_user.user_name 
						    from (
						        select * from spw_notice
						        order by notice_num desc        
						    ) A
						    join spw_user
						    on A.notice_writer = spw_user.user_id						    
						    where rownum &lt;= #{endRow}
						) B
   		 			  )
   		 where rn between #{startRow} and #{endRow}
	</select>
	
	<!-- 공지사항 전체 게시글 수 -->
	<select id="getNoticeCount" resultType="int">
		select count(*) from spw_notice
	</select>
	
	
	<!-- 공지사항 상세 -->
	<select id="getNoticeContent" parameterType="int" resultType="NoticeDTO">
		select * from spw_notice 
		where notice_num = #{notice_num}
	</select>
	
	<!-- 공지사항 조회수 -->
	<update id="updateReadCount" parameterType="int">
		update spw_notice 
		set notice_readCount = notice_readCount + 1
		where notice_num = #{notice_num}
	</update>
	
	<!-- 공지사항 검색 -->
	<select id="searchResult" parameterType="java.util.Map" resultType="NoticeDTO">
		select B.*
		from (
			select rownum rn, A.*, spw_user.user_name
		    from(
		        select * from spw_notice		        
				order by notice_num desc
		    )A
			join spw_user
			on A.notice_writer = spw_user.user_id
			where rownum &lt;= #{endRow}
			<choose>
			<when test="search == 'title'">
				and notice_title like '%' || #{searchString} || '%'
			</when>
			<when test="search == 'writer'">
				and user_name like '%' || #{searchString} || '%'
			</when>
			</choose>
		)B
		where rn between #{startRow} and #{endRow}
	</select>
	
	
	<!-- 공지사항 검색결과 수 -->
	<select id="searchCount" parameterType="java.util.Map" resultType="int">
		select count(*)
		from (
		    select A.*, spw_user.user_name
		    from(
		        select * from spw_notice	
		        order by notice_num desc
		        )A
		    join spw_user
		    on A.notice_writer = spw_user.user_id
		    <choose>
			<when test="search == 'title'">
				where notice_title like '%' || #{searchString} || '%'
			</when>
			<when test="search == 'writer'">
				where user_name like '%' || #{searchString} || '%'
			</when>
			</choose>
		)					
	</select>
	
</mapper>